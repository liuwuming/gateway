server.port = 10006
spring.application.name = gateway
eureka.client.serviceUrl.defaultZone = http://localhost:10000/eureka/
eureka.instance.instance-id = ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
eureka.instance.prefer-ip-address = true
zuul.host.connect-timeout-millis = 10000

#服务路由映射
zuul.routes.businessservice.path=/businessService/**
zuul.routes.businessservice.serviceId=businessService

zuul.routes.userservice.path =/userService/**
zuul.routes.userservice.serviceId =userService

#zuul.routes.authservice.path = /authservice/**
#zuul.routes.authservice.serviceId = authservice

#关闭过滤器
zuul.SendErrorFilter.post.disable = true
#zuul.SendResponseFilter.post.disable = true

#是否开启重试功能
zuul.retryable = true
#对当前服务的重试次数
ribbon.MaxAutoRetries = 2
# 切换实例的重试次数
ribbon.MaxAutoRetriesNextServer = 0
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations = true
#  ribbon重试超时时间
ribbon.ConnectTimeout = 10000
#  建立连接后的超时时间
ribbon.ReadTimeout = 10000
#何种响应状态码才进行重试
ribbon.retryableStatusCodes = 404,502

logging.level.org.springframework.cloud.gateway = trace
logging.level.org.springframework.http.server.reactive: = debug
logging.level.org.springframework.web.reactive = debug
logging.level.reactor.ipc.netty = debug

#log
spring.output.ansi.enabled=always
logging.level.com.zfec.*=DEBUG
logging.file=./logs/${spring.application.name}/${spring.application.name}.log
logging.file.max-size=10MB
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %clr(%logger){cyan} %clr(%msg%n){green}
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n

